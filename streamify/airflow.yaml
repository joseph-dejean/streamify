---
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: v1
kind: Namespace
metadata:
  name: airflow
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: airflow
  namespace: airflow
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: airflow
  namespace: airflow
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: airflow
  namespace: airflow
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: airflow
subjects:
  - kind: ServiceAccount
    name: airflow
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-config
  namespace: airflow
data:
  AIRFLOW__CORE__EXECUTOR: "KubernetesExecutor"
  AIRFLOW__CORE__LOAD_EXAMPLES: "false"
  AIRFLOW__KUBERNETES__DELETE_WORKER_PODS: "true"
  AIRFLOW__KUBERNETES__NAMESPACE: "airflow"
  AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY: "apache/airflow"
  AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG: "2.9.3"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13
          env:
            - name: POSTGRES_USER
              value: airflow
            - name: POSTGRES_PASSWORD
              value: airflow
            - name: POSTGRES_DB
              value: airflow
          ports:
            - containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: airflow
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      serviceAccountName: airflow
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: ["sh", "-c", "until nc -z -w 2 postgres 5432; do echo 'waiting for postgres'; sleep 2; done;"]
      containers:
        - name: webserver
          image: your-registry/streamify-repo/custom-airflow:latest
          command: ["airflow", "webserver"]
          envFrom:
            - configMapRef:
                name: airflow-config
          env:
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "1Gi"
              cpu: "1"
            limits:
              memory: "2Gi"
              cpu: "2"
---
apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
  namespace: airflow
spec:
  selector:
    app: airflow-webserver
  ports:
    - protocol: TCP
      port: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-scheduler
  template:
    metadata:
      labels:
        app: airflow-scheduler
    spec:
      serviceAccountName: airflow
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: ["sh", "-c", "until nc -z -w 2 postgres 5432; do echo 'waiting for postgres'; sleep 2; done;"]
        - name: upgrade-db
          image: your-registry/streamify-repo/custom-airflow:latest
          command: ["airflow", "db", "upgrade"]
          envFrom:
            - configMapRef:
                name: airflow-config
          env:
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
      containers:
        - name: scheduler
          image: your-registry/streamify-repo/custom-airflow:latest
          command: ["airflow", "scheduler"]
          envFrom:
            - configMapRef:
                name: airflow-config
          env:
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
          resources:
            requests:
              memory: "1Gi"
              cpu: "1"
            limits:
              memory: "2Gi"
              cpu: "2"